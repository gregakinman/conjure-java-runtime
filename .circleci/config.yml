version: 2.1

jobs:
  build:
    docker: [{ image: 'circleci/openjdk:8u181-jdk' }]
    resource_class: xlarge
    environment:
      GRADLE_OPTS: -Dorg.gradle.console=plain -Dorg.gradle.internal.launcher.welcomeMessageEnabled=false
      CIRCLE_TEST_REPORTS: /home/circleci/junit
      CIRCLE_ARTIFACTS: /home/circleci/artifacts

    steps:
      - checkout
      - delete_unrelated_tags
      - restore_cache: { key: 'gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}' }
      - restore_cache: { key: 'gradle-cache-{{ checksum "versions.props" }}-{{ checksum "build.gradle" }}' }
      - run: ./gradlew --profile --stacktrace --parallel --continue --no-daemon --max-workers=8 build
      - save_cache:
          key: 'gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}'
          paths: [ ~/.gradle/wrapper ]
      - save_cache:
          key: 'gradle-cache-v2-{{ checksum "versions.props" }}-{{ checksum "build.gradle" }}'
          paths: [ ~/.gradle/caches ]
      - run:
          command: mkdir -p ~/junit && find . -type f -regex ".*/build/.*TEST.*xml" -exec cp --parents {} ~/junit/ \;
          when: always
      - deploy:
          command: |
            # publishing snapshots to bintray does not work, so we only publish from tag builds (not develop)
            if [[ "${CIRCLE_TAG}" =~ [0-9]+(\.[0-9]+)+(-[a-zA-Z]+[0-9]*)* ]]; then
              ./gradlew --profile --stacktrace --parallel --continue --no-daemon --max-workers=8 publish
            else
              ./gradlew --profile --stacktrace --parallel --continue --no-daemon --max-workers=8 publishToMavenLocal
              mkdir -p $CIRCLE_ARTIFACTS/poms
              find . -name 'pom-default.xml' -exec cp --parents {} $CIRCLE_ARTIFACTS/poms \;
            fi
      - store_test_results: { path: ~/junit }
      - store_artifacts: { path: ~/artifacts }

workflows:
  version: 2
  build:
    jobs:
      - build:
          # CircleCI2 will ignore tags without this. https://circleci.com/docs/2.0/workflows/#git-tag-job-execution
          filters: { tags: { only: /.*/ } }

commands:
  delete_unrelated_tags:
    description: 'Prunes the current git repo to ensure that the only tag point to head is $CIRCLE_TAG'
    steps:
      - run: |
          ALL_TAGS=$(git tag --points-at HEAD)
          if [ -z "$ALL_TAGS" ]; then
              echo "No-op as there are no tags on the current commit ($(git rev-parse HEAD))"
              exit 0
          fi
          if [ -z "${CIRCLE_TAG:+x}" ]; then
              echo "Non-tag build, deleting all tags which point to HEAD: [${ALL_TAGS/$'\n'/,}]"
              echo "$ALL_TAGS" | while read -r TAG; do git tag -d "$TAG" 1>/dev/null; done
              exit 0
          fi
          TAGS_TO_DELETE=$(echo "$ALL_TAGS" | grep -v "^$CIRCLE_TAG$" || :)
          if [ -z "$TAGS_TO_DELETE" ]; then
              echo "No-op as exactly one tag ($CIRCLE_TAG) points to HEAD"
              exit 0
          fi
          echo "Detected tag build, deleting all tags except '$CIRCLE_TAG' which point to HEAD: [${TAGS_TO_DELETE/$'\n'/,}]"
          echo "$TAGS_TO_DELETE" | while read -r TAG; do git tag -d "$TAG" 1>/dev/null; done
